name: AUDIOMOTH-CONFIG

on:
  schedule:
    - cron:  '0 */6 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.ACTIONS_TOKEN }}
      - shell: pwsh
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}
        run: |
          choco apikey --key $env:CHOCO_API_KEY --source https://push.chocolatey.org/
          
      - name: Chocolatey
        uses: crazy-max/ghaction-chocolatey@v1
        with:
          args: upgrade chocolatey

      - name: Script
        run:  |
          $Version = ([xml](Get-Content ./audiomoth-config/audiomoth-config.nuspec)).package.metadata.version
          $tag = (Invoke-WebRequest "https://api.github.com/repos/OpenAcousticDevices/AudioMoth-Configuration-App/releases/latest" | ConvertFrom-Json)[0].name
          $release = (Invoke-WebRequest "https://api.github.com/repos/OpenAcousticDevices/AudioMoth-Configuration-App/releases/latest" | ConvertFrom-Json)[0].body
          
          echo $Version
          echo $tag
          Start-Sleep -Seconds 5
          
          if ( $tag -eq $Version )
          {
          echo 'Last version already exist'
          }
          else
          {
          #run script
          ./send_audiomoth-config.ps1
          
          #git and create tag
          git config --local user.email "a-d-r-i@outlook.fr"
          git config --local user.name "A-d-r-i"
          git add .
          git commit -m "[Bot] Update files - audiomoth-config" --allow-empty
          git tag -a audiomoth-config-v$tag -m "Audiomoth Config - version $tag"
          git push -f && git push --tags
          
          #create release
          Install-Module -Name New-GitHubRelease -Force
          Import-Module -Name New-GitHubRelease
          $newGitHubReleaseParameters = @{
          GitHubUsername = "A-d-r-i"
          GitHubRepositoryName = "update_choco_package"
          GitHubAccessToken = "${{ secrets.ACTIONS_TOKEN }}"
          ReleaseName = "Audiomoth Config v$tag"
          TagName = "audiomoth-config-v$tag"
          ReleaseNotes = "Changelog: $release"
          AssetFilePaths = ".\audiomoth-config\audiomoth-config.$tag.nupkg"
          IsPreRelease = $false
          IsDraft = $false
          }
          $resultrelease = New-GitHubRelease @newGitHubReleaseParameters
          
          #post tweet
          $twitter = (Select-String -Path config.txt -Pattern "twitter=(.*)").Matches.Groups[1].Value
          if ( $twitter -eq "y" )
          {
          Install-Module PSTwitterAPI -Force
          Import-Module PSTwitterAPI
          $OAuthSettings = @{
          ApiKey = "${{ secrets.PST_KEY }}"
          ApiSecret = "${{ secrets.PST_SECRET }}"
          AccessToken = "${{ secrets.PST_TOKEN }}"
          AccessTokenSecret = "${{ secrets.PST_TOKEN_SECRET }}"
          }
          Set-TwitterOAuthSettings @OAuthSettings
          Send-TwitterStatuses_Update -status "Audiomoth-Config-App v$tag push now on @chocolateynuget! 
          
          Link: https://community.chocolatey.org/packages/audiomoth-config/$tag
          @AudioMoth @OpenAcoustics
          #audiomoth #release #opensource
          "
          }
          }
